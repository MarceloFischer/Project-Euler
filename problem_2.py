"""Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

from functools import cache

@cache
def fibonacci(n):
    """Return a list with the first `n` fibonacci numbers"""
    if n == 1:
        return 1
    elif n == 2:
        return 2
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

n = 1
numbers = []
while True:
    number = fibonacci(n)
    if number <= 4e6:
        numbers.append(number)
        n += 1
    else:
        break

even_numbers = [number for number in numbers if (number % 2 == 0)]

result = sum(even_numbers)
print(result)